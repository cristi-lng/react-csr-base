/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as SettingsIndexRouteImport } from './routes/settings/index'
import { Route as ProductsIndexRouteImport } from './routes/products/index'
import { Route as CategoriesIndexRouteImport } from './routes/categories/index'
import { Route as ShoppingListsIdRouteImport } from './routes/shoppingLists/$id'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const SettingsIndexRoute = SettingsIndexRouteImport.update({
  id: '/settings/',
  path: '/settings/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProductsIndexRoute = ProductsIndexRouteImport.update({
  id: '/products/',
  path: '/products/',
  getParentRoute: () => rootRouteImport,
} as any)
const CategoriesIndexRoute = CategoriesIndexRouteImport.update({
  id: '/categories/',
  path: '/categories/',
  getParentRoute: () => rootRouteImport,
} as any)
const ShoppingListsIdRoute = ShoppingListsIdRouteImport.update({
  id: '/shoppingLists/$id',
  path: '/shoppingLists/$id',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/shoppingLists/$id': typeof ShoppingListsIdRoute
  '/categories': typeof CategoriesIndexRoute
  '/products': typeof ProductsIndexRoute
  '/settings': typeof SettingsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/shoppingLists/$id': typeof ShoppingListsIdRoute
  '/categories': typeof CategoriesIndexRoute
  '/products': typeof ProductsIndexRoute
  '/settings': typeof SettingsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/shoppingLists/$id': typeof ShoppingListsIdRoute
  '/categories/': typeof CategoriesIndexRoute
  '/products/': typeof ProductsIndexRoute
  '/settings/': typeof SettingsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/shoppingLists/$id'
    | '/categories'
    | '/products'
    | '/settings'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/shoppingLists/$id' | '/categories' | '/products' | '/settings'
  id:
    | '__root__'
    | '/'
    | '/shoppingLists/$id'
    | '/categories/'
    | '/products/'
    | '/settings/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ShoppingListsIdRoute: typeof ShoppingListsIdRoute
  CategoriesIndexRoute: typeof CategoriesIndexRoute
  ProductsIndexRoute: typeof ProductsIndexRoute
  SettingsIndexRoute: typeof SettingsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/settings/': {
      id: '/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/products/': {
      id: '/products/'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof ProductsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/categories/': {
      id: '/categories/'
      path: '/categories'
      fullPath: '/categories'
      preLoaderRoute: typeof CategoriesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/shoppingLists/$id': {
      id: '/shoppingLists/$id'
      path: '/shoppingLists/$id'
      fullPath: '/shoppingLists/$id'
      preLoaderRoute: typeof ShoppingListsIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ShoppingListsIdRoute: ShoppingListsIdRoute,
  CategoriesIndexRoute: CategoriesIndexRoute,
  ProductsIndexRoute: ProductsIndexRoute,
  SettingsIndexRoute: SettingsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
